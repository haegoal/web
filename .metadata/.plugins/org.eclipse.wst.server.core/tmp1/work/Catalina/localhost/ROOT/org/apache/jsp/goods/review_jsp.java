/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-08-14 02:26:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.goods;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class review_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1690328738969L));
    _jspx_dependants.put("jar:file:/C:/data/web/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/shop/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("	.content{\r\n");
      out.write("		cursor:pointer;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("<div class=\"row my-5\">\r\n");
      out.write("	<div class=\"col\">\r\n");
      out.write("		<h3 class=\"text-center mb-5\">고객리뷰</h3>\r\n");
      out.write("		");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("	\r\n");
      out.write("		<div id=\"div_review\" class=\"my-5\"></div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- 리뷰목록 템플릿 -->\r\n");
      out.write("<script id=\"temp_review\" type=\"x-handlebars-template\">\r\n");
      out.write("	{{#each .}}\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-md-1\">\r\n");
      out.write("				<img src=\"{{fimage photo}}\" width=\"50px\">\r\n");
      out.write("				<div>{{uid}}</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col\">\r\n");
      out.write("				<div>{{revDate}}</div>\r\n");
      out.write("				<div class=\"div-display{{rid}}\" rid=\"{{rid}}\">\r\n");
      out.write("					<div class=\"ellipsis content\">{{content}}</div>\r\n");
      out.write("					<div class=\"text-end mt-2\" style=\"{{show uid}}\">\r\n");
      out.write("						<button class=\"btn btn-primary btn-sm btn-update\">수정</button>\r\n");
      out.write("						<button class=\"btn btn-danger btn-sm btn-delete\">삭제</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"div-update{{rid}}\" rid=\"{{rid}}\" style=\"display:none;\">\r\n");
      out.write("					<textarea class=\"form-control content\" rows=\"3\">{{content}}</textarea>\r\n");
      out.write("					<div class=\"text-end mt-2\">\r\n");
      out.write("						<button class=\"btn btn-primary btn-sm btn-save\">저장</button>\r\n");
      out.write("						<button class=\"btn btn-secondary btn-sm btn-cancel\">취소</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		<div>\r\n");
      out.write("		<hr>\r\n");
      out.write("	{{/each}}\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("	Handlebars.registerHelper(\"show\", function(writer){\r\n");
      out.write("		if(writer!=uid) return \"display:none\";\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	Handlebars.registerHelper(\"fimage\", function(image){\r\n");
      out.write("		if(image==null){\r\n");
      out.write("			return \"http://via.placeholder.com/120x174\";\r\n");
      out.write("		}else{\r\n");
      out.write("			return image;\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("	const uid=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.uid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("	const gid=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.gid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("	\r\n");
      out.write("	$(\"#div_review\").on(\"click\", \".btn-save\", function(){\r\n");
      out.write("		const row=$(this).parent().parent();\r\n");
      out.write("		const rid=row.attr(\"rid\");\r\n");
      out.write("		const content=row.find(\".content\").val();\r\n");
      out.write("		if(confirm(\"수정하시겠습니까?\")){\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				data:{rid, content},\r\n");
      out.write("				type:\"post\",\r\n");
      out.write("				url:\"/review/update\",\r\n");
      out.write("				success:function(){\r\n");
      out.write("					getList();\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	//리뷰 수정버튼이나 취소버튼을 클릭한 경우\r\n");
      out.write("	$(\"#div_review\").on(\"click\", \".btn-update, .btn-cancel\", function(){\r\n");
      out.write("		const rid=$(this).parent().parent().attr(\"rid\");\r\n");
      out.write("		$(\"#div_review .div-display\" + rid).toggle();\r\n");
      out.write("		$(\"#div_review .div-update\" + rid).toggle();\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	//리뷰 삭제버튼을 클릭한 경우\r\n");
      out.write("	$(\"#div_review\").on(\"click\", \".btn-delete\", function(){\r\n");
      out.write("		const rid=$(this).parent().parent().attr(\"rid\");\r\n");
      out.write("		if(confirm(rid + \"번 리뷰를 삭제하실래요?\")){\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type:\"post\",\r\n");
      out.write("				data:{rid},\r\n");
      out.write("				url:\"/review/delete\",\r\n");
      out.write("				success:function(){\r\n");
      out.write("					getList();\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	//content를 클릭한 경우\r\n");
      out.write("	$(\"#div_review\").on(\"click\", \".content\", function(){\r\n");
      out.write("		$(this).toggleClass(\"ellipsis\");\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	getList();\r\n");
      out.write("	function getList(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type:\"get\",\r\n");
      out.write("			url:\"/review/list.json\",\r\n");
      out.write("			data:{gid},\r\n");
      out.write("			dataType:\"json\",\r\n");
      out.write("			success:function(data){\r\n");
      out.write("				//console.log(data);\r\n");
      out.write("				const temp=Handlebars.compile($(\"#temp_review\").html());\r\n");
      out.write("				$(\"#div_review\").html(temp(data));\r\n");
      out.write("				$(\"#text\").html(data.length);\r\n");
      out.write("			}\r\n");
      out.write("		});	\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	$(\"#btn-review\").on(\"click\", function(){\r\n");
      out.write("		location.href=\"/user/login?target=/goods/read?gid=\" + gid;	\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	$(frm).on(\"submit\", function(e){\r\n");
      out.write("		e.preventDefault();\r\n");
      out.write("		const content=$(frm.content).val();\r\n");
      out.write("		if(content==\"\"){\r\n");
      out.write("			alert(\"리뷰 내용을 입력하세요!\");\r\n");
      out.write("			$(frm.content).focus();\r\n");
      out.write("		}else{\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type:\"post\",\r\n");
      out.write("				url:\"/review/insert\",\r\n");
      out.write("				data:{gid, uid, content},\r\n");
      out.write("				success:function(){\r\n");
      out.write("					alert(\"리뷰가 저장되었습니다.\");\r\n");
      out.write("					$(frm.content).val(\"\");\r\n");
      out.write("					getList();\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /goods/review.jsp(11,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user==null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<div class=\"text-center\">\r\n");
          out.write("				<button class=\"btn btn-primary w-50\" id=\"btn-review\">리뷰작성</button>\r\n");
          out.write("			</div>\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /goods/review.jsp(16,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user!=null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<form name=\"frm\">\r\n");
          out.write("				<textarea name=\"content\" rows=\"3\" class=\"form-control\" placeholder=\"리뷰내용을 입력하세요!\"></textarea>\r\n");
          out.write("				<div class=\"text-center mt-2\">\r\n");
          out.write("					<button class=\"btn btn-primary px-5\">글쓰기</button>\r\n");
          out.write("				</div>	\r\n");
          out.write("			</form>\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }
}
